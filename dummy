{
  "accion": "get by userId",
  "datos": [
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Lunes, 7 de Septiembre de 2020",
      "user": "5f903cb1f6c866499c4dbe7a",
      "descripcion": "Inicio de las prácticas en nunegal"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Martes, 8 de Septiembre de 2020",
      "user": "5f903cb1f6c866499c4dbe7a",
      "descripcion": "Diseñando la BBDD en MySQL"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Miércoles, 9 de Septiembre de 2020",
      "user": "5f903cb1f6c866499c4dbe7a",
      "descripcion": "Implementando la BBDD en MySQL"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Jueves, 10 de Septiembre de 2020",
      "user": "5f903cb1f6c866499c4dbe7a",
      "descripcion": "Diseño del backend en nodejs"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Viernes, 11 de Septiembre de 2020",
      "user": "5f903cb1f6c866499c4dbe7a",
      "descripcion": "Implementando funciones CRUD en el backend"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Sábado, 12 de Septiembre de 2020",
      "user": "5f903cb1f6c866499c4dbe7a",
      "descripcion": "Implementando funciones CRUD en el backend"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Domingo, 13 de Septiembre de 2020",
      "user": "5f903cb1f6c866499c4dbe7a",
      "descripcion": "Diseño del frontend en Angular"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Lunes, 14 de Septiembre de 2020",
      "user": "5f903cb1f6c866499c4dbe7a",
      "descripcion": "Diseño del frontend en Angular"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Martes, 15 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Implementando signup y login"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Miércoles, 16 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Implementando signup y login"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Jueves, 17 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Implementando autenticación con JWT"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Viernes, 18 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Encriptando contraseñas"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Sábado, 19 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Problemas con la encriptacion debido al uso de async/await en MySQL"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Domingo, 20 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Problemas con la encriptacion debido al uso de async/await en MySQL"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Lunes, 21 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Problemas con la encriptacion debido al uso de async/await en MySQL"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Martes, 22 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Migración de la BBDD a mongoDB"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Miércoles, 23 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Migración de la BBDD a mongoDB"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Jueves, 24 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Refactorizando backend"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Viernes, 25 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Implementando gestor de registros en el frontend"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Sábado, 26 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Implementando gestor de registros en el frontend"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Domingo, 27 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Implementando templates de los formularios del frontend"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Lunes, 28 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Implementando update de datos de usuario y contraseñas"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Martes, 29 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Gestionando formatos de fechas en el backend"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Miércoles, 30 de Septiembre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Refactorizando frontend"
    },
    {
      "horaEntrada": 9,
      "horaSalida": 14,
      "fecha": "Jueves, 1 de Octubre de 2020",
      "user": "5f7508d1ad23462760a3d282",
      "descripcion": "Funciones avanzadas de fechas en mongoDB"
    }
  ]
}

async function getThisWeek (req, res) {
    try {
        const userId = req.params.id;
        const vacio = {
            horaEntrada: null,
            horaSalida: null,
            fecha: null,
            user: userId,
            descripcion: null
        }
        let registrosSalida = [];
        while (registrosSalida.length < 7) {
            registrosSalida.push(vacio);
        }

        let date = new Date(Date.now());
        //if (date === 0) date = 7; //WTF
        let registros = await RegistroHoras
            .find({fecha: {$gte: new Date(new Date() - date.getDay() * 60 * 60 * 24 * 1000)}, user: userId})
            .sort({fecha:1})
            .limit(8);
        
        if (registros[0].fecha.getDay() === 0) {
            registros.shift(); //Eliminamos el domingo
        }
        
        for (let registro of registros) {
            switch (registro.fecha.getDay()) {
                case 0: registrosSalida[6] = registro;
                    break;
                case 1: registrosSalida[0] = registro;
                    break;
                case 2: registrosSalida[1] = registro;
                    break;
                case 3: registrosSalida[2] = registro;
                    break;
                case 4: registrosSalida[3] = registro;
                    break;
                case 5: registrosSalida[4] = registro;
                    break;
                case 6: registrosSalida[5] = registro;
                    break;
            }
        }
        res.status(200).json({accion: 'get by userId', datos: manageDates(registrosSalida)});
    }
    catch {
        res.status(500).json({accion: 'get by userId', mensaje: 'Error al obtener el registro.'})
    }
}